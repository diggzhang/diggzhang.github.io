---
layout:     post
title:      "新的买办主义"
subtitle:   "信息孤岛"
date:       2021-03-21
author:     "diggzhang"
tags:
    - 方法论
---

近期因为学习一些技术，比如`Quartz`、`Springboot`时，愈发肯定了一个一直非常抗拒的观点 —— 真正有效的学习资源都在信息孤岛中，要付费的。

即便是在Java的世界中都是比较老牌和成熟的技术方案，我无法通过**官方说明文档**和**精细搜索获得的结果**去获得生产级别的代码经验。

我不理解，这些”经验“类的知识该如何去获得。你说大家都一样，好端端的人，看官方文档三言两语，翻个google关键字差异应该不会太大。如何一步到位？

诚然已经有足够多的信息去检索，足够多的网课去系统化学习，但是真正的事实是，有一个精确的工程需求的时候，无效信息近乎淹没式存在。
主流搜索引擎被污染的很严重，出现了很多机翻`stackoverflow`。
以及中文环境内人们更喜欢在自己的微信公众号内发表最新的技术博客（只能去搜狗检索)。

最后，即便非常幸运，来回切换检索工具，不断扩展信息源，达到了预期结果，依然是非常碎片的知识点，不足以生产级编码实践。

最终，我不得不承认这些”经验“的获得渠道便是在动辄上万元的付费课程中。这类课程会详尽的列出课程安排，一线大厂生产经验的大师在几百个小时的课程中说明。
那就很尴尬了，如想寻求技术成长，最快的方式就是买经验。**我对网课的认识是错误的，之前以为是图个系统化学习，实际是图个买经验。**

你想到下一个阶段？你要掏腰包，买经验。别的地方或许有，但是很难获得。你不甘心？那你就继续浪费时间吧。没有好心人写了一篇博客等你去看。

辩证的想，为什么以前没有这种现象？是我没意识到？是我技术要求太低，用不着？
我粗浅的结论是，跟技术演化阶段有关系，新的技术出现后，大家都处于摸索阶段，无论是学习成本，还是生产环境实践的成本，都必然会倒逼技术人员不断交流。整体环境还存在讨论的氛围。
在技术演化相对成熟后，标准的东西就产生了。以前我们讨论的是如何打磨，现在我们更要讨论的是如何拿来就用，直接用结果说事。

触类旁通，放到企业中，我就更加理解为什么要不断招聘有经验的人入伙了，其实就是为了买经验。
或许以前的学习可以基于技术演进和整体情景进化，但是如今各个环境技术点都相对比较成熟，可以通过尽快买经验达到目的。

买买买可以尽快解决问题，卷的更有力。“能解决问题"，听着非常合理。但是我相信一定有忽略演化过程的代价，未来技术人员的成长，想来也是磕磕绊绊。

未来学习编程，会不会成了口口相传的技能？